<project name="AdvancedFiller" basedir="." default="main">
  <property environment="env"/>

  <property name="version" value="local"/>
  <property name="mc.version" value="1.5.2"/>
  <property name="forge.version" value="7.8.1.737"/>
  <property name="bc.version" value="3.7.0"/>

  <condition property="buildNumber" value="_${env.BUILD_NUMBER}" else="">
    <isset property="env.BUILD_NUMBER" />
  </condition>

  <property name="version.full" value="${version}${buildNumber}"/>

  <property name="src.dir" value="src"/>
  <property name="resource.dir" value="resource"/>
  <property name="build.dir" value="build"/>
  <property name="download.dir" value="download"/>
  <property name="forge.dir" value="${build.dir}/forge"/>
  <property name="mcp.dir" value="${forge.dir}/mcp"/>
  <property name="commonsrc.dir" value="${mcp.dir}/src/minecraft"/>
  <property name="bc.dir" value="${build.dir}/BuildCraft-${bc.version}"/>
  <property name="reobf.dir" value="${mcp.dir}/reobf/minecraft"/>
  <property name="classes.dir" value="${build.dir}/classes"/>
  <property name="resource.dir" value="resource"/>

  <echo message="build AdvancedFiller ${version.full} with MC:${mc.version} Forge:${forge.version} BC:${bc.version}"/>

  <target name="clean">
    <delete dir="${build.dir}"/>
  </target>

  <target name="setup">
    <mkdir dir="${download.dir}"/>

    <get src="http://files.minecraftforge.net/minecraftforge/minecraftforge-src-${mc.version}-${forge.version}.zip" dest="${download.dir}" skipexisting="True"/>
    <get src="https://codeload.github.com/BuildCraft/BuildCraft/zip/${bc.version}" dest="${download.dir}/BuildCraft-${bc.version}.zip" skipexisting="True"/>

    <unzip dest="${build.dir}" failOnEmptyArchive="true">
      <fileset dir="${download.dir}">
        <include name="minecraftforge-src-${mc.version}-${forge.version}.zip"/>
      </fileset>
    </unzip>

    <unzip dest="${build.dir}" failOnEmptyArchive="true">
      <fileset dir="${download.dir}">
        <include name="BuildCraft-${bc.version}.zip"/>
      </fileset>
    </unzip>

    <chmod file="${forge.dir}/install.sh" perm="+x"/>
    
    <exec dir="${forge.dir}" executable="cmd" osfamily="windows" failonerror="true">
      <arg line="/c install.cmd"/>
    </exec>

    <exec dir="${forge.dir}" executable="sh" osfamily="unix" failonerror="true">
      <arg value="install.sh"/>
    </exec>

    <copy todir="${commonsrc.dir}">
      <fileset dir="${bc.dir}/common"/>
    </copy>
    
    <copy todir="${commonsrc.dir}">
      <fileset dir="${bc.dir}/buildcraft_resources"/>
    </copy>
  </target>

  <target name="copysrc">
    <copy todir="${commonsrc.dir}">
      <fileset dir="${src.dir}"/>
    </copy>
  </target>

  <target name="compile" depends="copysrc">
    <exec dir="${mcp.dir}" executable="cmd" osfamily="windows" failonerror="true">
      <arg line="/c recompile.bat"/>
    </exec>

    <exec dir="${mcp.dir}" executable="sh" osfamily="unix" failonerror="true">
      <arg value="recompile.sh"/>
    </exec>

    <exec dir="${mcp.dir}" executable="cmd" osfamily="windows" failonerror="true">
      <arg line="/c reobfuscate.bat"/>
    </exec>

    <exec dir="${mcp.dir}" executable="sh" osfamily="unix" failonerror="true">
      <arg value="reobfuscate.sh"/>
    </exec>

    <copy todir="${classes.dir}/mods/firstspring">
      <fileset dir="${reobf.dir}/mods/firstspring"/>
    </copy>

    <copy todir="${classes.dir}/ic2/api">
      <fileset dir="${reobf.dir}/ic2/api"/>
    </copy>

    <copy todir="${classes.dir}/buildcraft/api">
      <fileset dir="${reobf.dir}/buildcraft/api"/>
    </copy>

    <copy todir="${classes.dir}">
      <fileset dir="${resource.dir}"/>
    </copy>
  </target>

  <target name="package" depends="compile">
    <zip destfile="${build.dir}/AdvFiller_${mc.version}_${version.full}.zip"
         basedir="${classes.dir}"/>
  </target>

  <target name="main" depends="clean, setup, package"/>
</project>